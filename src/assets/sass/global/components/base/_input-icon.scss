// 
// Input Icon
//




// Config
$tf-input-icon: (
	default: (
		width: 3.2rem,
		font-size: (
			flaticon: 1.3em,
			fontawesome: 1.2em,
			lineawesome: 1.4em
		)
	),
	lg: (
		width: 4.2rem,
		font-size: (
			flaticon: 1.4em,
			fontawesome: 1.3em,
			lineawesome: 1.6em
		)
	),
	sm: (
		width: 2.7rem,
		font-size: (
			flaticon: 1em,
			fontawesome: 1em,
			lineawesome: 1.1em
		)
	)
);

// Base
.tf-input-icon {
    position: relative;
    padding: 0;
    width: 100%;

    // icon input sizing
    > .tf-input-icon__icon {
        position: absolute;
        height: 100%;
        display: flex;
        justify-content: center;
        top: 0;
        width: tf-get($tf-input-icon, default, width);

        &.tf-input-icon__icon--left {
            left: 0;
        }

        &.tf-input-icon__icon--right {
            right: 0;
        }

        > span {
            display: flex;
            align-items: center;    
            justify-content: center;
            height: 100%;

            i {
                display: flex;
                align-items: center;    
                justify-content: center;
                line-height: 0;
                color: tf-base-color(label, 2);
            }
        }

        // set icon sizes
        @include tf-icons-size( tf-get($tf-input-icon, default, font-size) );
    }

    .form-control.form-control-lg + .tf-input-icon__icon {
        width: tf-get($tf-input-icon, lg, width);

        // set icon sizes
        @include tf-icons-size( tf-get($tf-input-icon, lg, font-size) );
    }

    .form-control.form-control-sm ~ .tf-input-icon__icon {
        width: tf-get($tf-input-icon, sm, width);

        // set icon sizes
        @include tf-icons-size( tf-get($tf-input-icon, sm, font-size) );
    }

    // icon input alignments
    &.tf-input-icon--left {
        .form-control {
            padding-left: (tf-get($tf-input-icon, default, width) - 0.4rem);

            &.form-control-lg {
                padding-left: (tf-get($tf-input-icon, lg, width) - 0.6rem);
            }

            &.form-control-sm {
                padding-left: (tf-get($tf-input-icon, sm, width) - 0.2rem);
            }
        }
    }

    &.tf-input-icon--right {
        .form-control {
            padding-right: (tf-get($tf-input-icon, default, width) - 0.4rem);

            &.form-control-lg {
                padding-right: (tf-get($tf-input-icon, lg, width) - 0.6rem);
            }

            &.form-control-sm {
                padding-right: (tf-get($tf-input-icon, sm, width) - 0.2rem);
            }
        }
    }

    // fixed width icon inputs        
    &.tf-input-icon--fixed {
        display: inline-block;
        width: tf-get($tf-input-icon, default, fixed);
    }

    &.tf-input-icon--fixed-large {
        display: inline-block;
        width: tf-get($tf-input-icon, lg, fixed);
    }

    &.tf-input-icon--fixed-small {
        display: inline-block;
        width: tf-get($tf-input-icon, sm, fixed);
    }  
}